<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.hucheng.dao.impl.DandanWalletAccountMapper">
  <resultMap id="BaseResultMap" type="com.hucheng.common.entity.DandanWalletAccount">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="userId" jdbcType="INTEGER" property="userid" />
    <result column="accountId" jdbcType="VARCHAR" property="accountid" />
    <result column="password" jdbcType="VARCHAR" property="password" />
    <result column="keystorePath" jdbcType="VARCHAR" property="keystorepath" />
    <result column="createTime" jdbcType="TIMESTAMP" property="createtime" />
    <result column="remark" jdbcType="VARCHAR" property="remark" />
  </resultMap>
  <sql id="Base_Column_List">
    id, userId, accountId, password, keystorePath, createTime, remark
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from dandan_wallet_account
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from dandan_wallet_account
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.hucheng.common.entity.DandanWalletAccount">
    insert into dandan_wallet_account (id, userId, accountId, 
      password, keystorePath, createTime, 
      remark)
    values (#{id,jdbcType=INTEGER}, #{userid,jdbcType=INTEGER}, #{accountid,jdbcType=VARCHAR}, 
      #{password,jdbcType=VARCHAR}, #{keystorepath,jdbcType=VARCHAR}, #{createtime,jdbcType=TIMESTAMP}, 
      #{remark,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.hucheng.common.entity.DandanWalletAccount">
    insert into dandan_wallet_account
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="userid != null">
        userId,
      </if>
      <if test="accountid != null">
        accountId,
      </if>
      <if test="password != null">
        password,
      </if>
      <if test="keystorepath != null">
        keystorePath,
      </if>
      <if test="createtime != null">
        createTime,
      </if>
      <if test="remark != null">
        remark,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="userid != null">
        #{userid,jdbcType=INTEGER},
      </if>
      <if test="accountid != null">
        #{accountid,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="keystorepath != null">
        #{keystorepath,jdbcType=VARCHAR},
      </if>
      <if test="createtime != null">
        #{createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="remark != null">
        #{remark,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.hucheng.common.entity.DandanWalletAccount">
    update dandan_wallet_account
    <set>
      <if test="userid != null">
        userId = #{userid,jdbcType=INTEGER},
      </if>
      <if test="accountid != null">
        accountId = #{accountid,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="keystorepath != null">
        keystorePath = #{keystorepath,jdbcType=VARCHAR},
      </if>
      <if test="createtime != null">
        createTime = #{createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="remark != null">
        remark = #{remark,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.hucheng.common.entity.DandanWalletAccount">
    update dandan_wallet_account
    set userId = #{userid,jdbcType=INTEGER},
      accountId = #{accountid,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      keystorePath = #{keystorepath,jdbcType=VARCHAR},
      createTime = #{createtime,jdbcType=TIMESTAMP},
      remark = #{remark,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>