<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
                        http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
                        http://www.springframework.org/schema/context
                        http://www.springframework.org/schema/context/spring-context-3.1.xsd
                        http://www.springframework.org/schema/mvc
                        http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd">
    <!-- 自动扫描该包，使SpringMVC认为包下用了@controller注解的类是控制器 -->
    <context:component-scan base-package="com.hucheng.chinawkb" >
        <context:exclude-filter type="annotation" expression="org.springframework.stereotype.Service"/>
    </context:component-scan>

    <!-- 激活注解 -->
    <context:annotation-config />
    <!-- 扩展驱动，让请求可以进入到某个controller的方法中 -->
    <mvc:annotation-driven>
        <mvc:message-converters>
            <bean class="org.springframework.http.converter.StringHttpMessageConverter">
                <property name="supportedMediaTypes">
                    <list>
                        <value>text/plain;charset=UTF-8</value>
                        <value>text/html;charset=UTF-8</value>
                    </list>
                </property>
            </bean>
            <ref bean="mappingJacksonHttpMessageConverter" />
        </mvc:message-converters>
    </mvc:annotation-driven>

    <!--避免IE执行AJAX时，返回JSON出现下载文件 同： @JsonSerialize(include=JsonSerialize.Inclusion.NON_NULL)代替 -->
    <bean id="mappingJacksonHttpMessageConverter"
          class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
        <property name="supportedMediaTypes">
            <list>
                <value>application/json;charset=UTF-8</value>
            </list>
        </property>
        <!--处理对象属性null-->
        <property name="objectMapper">
            <bean class="com.fasterxml.jackson.databind.ObjectMapper">
                <!-- 处理responseBody 里面日期类型 -->
                <!--<property name="dateFormat">-->
                    <!--<bean class="java.text.SimpleDateFormat">-->
                        <!--<constructor-arg type="java.lang.String" value="yyyy-MM-dd HH:mm:ss" />-->
                    <!--</bean>-->
                <!--</property>-->
                <!-- 为null字段时不显示 -->
                <property name="serializationInclusion">
                    <value type="com.fasterxml.jackson.annotation.JsonInclude.Include">NON_NULL</value>
                </property>
            </bean>
        </property>
    </bean>
    <!-- 启动SpringMVC的注解功能，完成请求和注解POJO的映射 -->
    <bean class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter">
        <property name="messageConverters">
            <list>
                <ref bean="mappingJacksonHttpMessageConverter" /> <!-- JSON转换器 -->
                <bean class="org.springframework.http.converter.ByteArrayHttpMessageConverter" />
            </list>
        </property>
    </bean>

    <!-- 静态资源配置 -->
    <mvc:resources location="/upload/" mapping="/upload/**" />
    <mvc:resources location="/images/" mapping="/images/**" />
    <mvc:resources location="/css/" mapping="/css/**" />
    <mvc:resources location="/js/" mapping="/js/**" />
    <mvc:resources location="/WEB-INF/decorator/" mapping="/WEB-INF/decorator/**" />

    <!-- 拦截器配置 -->
    <mvc:interceptors>
        <!--国际化配置-->
        <bean id="localeChangeInterceptor"
              class="org.springframework.web.servlet.i18n.LocaleChangeInterceptor">
            <property name="paramName" value="lang" />
        </bean>
        <!--客户端基础信息处理-->
        <mvc:interceptor>
            <mvc:mapping path="/**"/>
            <bean class="com.hucheng.chinawkb.interceptor.HttpInterceptor">
                <property name="sysversion">
                    <value>1.0</value>
                </property>
            </bean>
        </mvc:interceptor>
         <!--用户前端登录拦截 -->
        <mvc:interceptor>
            <mvc:mapping path="/home/**"/>
            <bean class="com.hucheng.chinawkb.interceptor.HomeInterceptor">
                <property name="allowUrls">
                    <list>
                        <!-- 如果请求中包含以下路径，则进行拦截 -->
                        <value>/web/member</value>
                        <value>/member</value>
                    </list>
                </property>
            </bean>
        </mvc:interceptor>
        <!--用户后端登录拦截 -->
        <mvc:interceptor>
            <mvc:mapping path="/admin/**"/>
            <mvc:mapping path="/druid/**"/>
            <bean class="com.hucheng.chinawkb.interceptor.AdminInterceptor">
                <property name="allowUrls">
                    <list>
                        <!-- 如果请求中包含以下路径，则不进行拦截 -->
                        <value>/admin/login</value><!--登录界面-->
                        <value>/admin/security_login</value><!--登录认证-->
                    </list>
                </property>
            </bean>
        </mvc:interceptor>

    </mvc:interceptors>

    <!-- 自定义异常处理，SimpleMappingExceptionResolver这个类可以是个空类，但是要写，方便在java代码里面使用 -->
    <bean id="exceptionResolver" class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver">
        <property name="exceptionMappings">
            <props>
                <prop key="com.hucheng.common.exception.SessionHomeTimeoutException">redirect:/?logout=true</prop>
                <prop key="com.hucheng.common.exception.SessionAdminTimeoutException">redirect:/admin/login?logout=true</prop>
            </props>
        </property>
    </bean>

    <!-- 配置文件上传，如果没有使用文件上传可以不用配置，当然如果不配，那么配置文件中也不必引入上传组件包 -->
    <bean id="multipartResolver"
          class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
        <!-- 默认编码 -->
        <property name="defaultEncoding" value="utf-8" />
        <!-- 文件大小最大值 -->
        <property name="maxUploadSize" value="10485760000" />
        <!-- 内存中的最大值 -->
        <property name="maxInMemorySize" value="40960" />
    </bean>



    <!-- 定义跳转的文件的前后缀 ，视图模式配置-->
    <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <!-- 这里的配置我的理解是自动给后面action的方法return的字符串加上前缀和后缀，变成一个 可用的url地址 -->
        <property name="prefix" value="/WEB-INF/view/" />
        <property name="suffix" value=".jsp" />
    </bean>

    <!-- 存储区域设置信息 -->
    <bean id="localeResolver"
          class="org.springframework.web.servlet.i18n.SessionLocaleResolver" />

    <!-- 国际化资源文件 -->
    <bean id="messageSource"
          class="org.springframework.context.support.ReloadableResourceBundleMessageSource">
        <property name="basename" value="classpath:lang/messages" />
    </bean>

</beans>