<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.hucheng.dao.impl.SysUserMapper">
  <resultMap id="BaseResultMap" type="com.hucheng.common.entity.SysUser">
    <id column="userid" jdbcType="INTEGER" property="userid" />
    <result column="showname" jdbcType="VARCHAR" property="showname" />
    <result column="username" jdbcType="VARCHAR" property="username" />
    <result column="email" jdbcType="VARCHAR" property="email" />
    <result column="mobile" jdbcType="VARCHAR" property="mobile" />
    <result column="password" jdbcType="VARCHAR" property="password" />
    <result column="paypassword" jdbcType="VARCHAR" property="paypassword" />
    <result column="idcard" jdbcType="VARCHAR" property="idcard" />
    <result column="regtime" jdbcType="TIMESTAMP" property="regtime" />
    <result column="ip" jdbcType="VARCHAR" property="ip" />
    <result column="sign" jdbcType="VARCHAR" property="sign" />
    <result column="status" jdbcType="INTEGER" property="status" />
    <result column="invitecode" jdbcType="VARCHAR" property="invitecode" />
    <result column="invite1" jdbcType="VARCHAR" property="invite1" />
    <result column="invite2" jdbcType="VARCHAR" property="invite2" />
    <result column="invite3" jdbcType="VARCHAR" property="invite3" />
    <result column="creditlevel" jdbcType="INTEGER" property="creditlevel" />
    <result column="isdeleted" jdbcType="INTEGER" property="isdeleted" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.hucheng.common.entity.SysUser">
    <result column="remark" jdbcType="LONGVARCHAR" property="remark" />
  </resultMap>
  <sql id="Base_Column_List">
    userid, showname, username, email, mobile, password, paypassword, idcard, regtime, 
    ip, sign, status, invitecode, invite1, invite2, invite3, creditlevel, isdeleted
  </sql>
  <sql id="Blob_Column_List">
    remark
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from sys_user
    where userid = #{userid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from sys_user
    where userid = #{userid,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.hucheng.common.entity.SysUser">
    insert into sys_user (userid, showname, username, 
      email, mobile, password, 
      paypassword, idcard, regtime, 
      ip, sign, status, invitecode, 
      invite1, invite2, invite3, 
      creditlevel, isdeleted, remark
      )
    values (#{userid,jdbcType=INTEGER}, #{showname,jdbcType=VARCHAR}, #{username,jdbcType=VARCHAR}, 
      #{email,jdbcType=VARCHAR}, #{mobile,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, 
      #{paypassword,jdbcType=VARCHAR}, #{idcard,jdbcType=VARCHAR}, #{regtime,jdbcType=TIMESTAMP}, 
      #{ip,jdbcType=VARCHAR}, #{sign,jdbcType=VARCHAR}, #{status,jdbcType=INTEGER}, #{invitecode,jdbcType=VARCHAR}, 
      #{invite1,jdbcType=VARCHAR}, #{invite2,jdbcType=VARCHAR}, #{invite3,jdbcType=VARCHAR}, 
      #{creditlevel,jdbcType=INTEGER}, #{isdeleted,jdbcType=INTEGER}, #{remark,jdbcType=LONGVARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.hucheng.common.entity.SysUser">
    insert into sys_user
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="userid != null">
        userid,
      </if>
      <if test="showname != null">
        showname,
      </if>
      <if test="username != null">
        username,
      </if>
      <if test="email != null">
        email,
      </if>
      <if test="mobile != null">
        mobile,
      </if>
      <if test="password != null">
        password,
      </if>
      <if test="paypassword != null">
        paypassword,
      </if>
      <if test="idcard != null">
        idcard,
      </if>
      <if test="regtime != null">
        regtime,
      </if>
      <if test="ip != null">
        ip,
      </if>
      <if test="sign != null">
        sign,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="invitecode != null">
        invitecode,
      </if>
      <if test="invite1 != null">
        invite1,
      </if>
      <if test="invite2 != null">
        invite2,
      </if>
      <if test="invite3 != null">
        invite3,
      </if>
      <if test="creditlevel != null">
        creditlevel,
      </if>
      <if test="isdeleted != null">
        isdeleted,
      </if>
      <if test="remark != null">
        remark,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="userid != null">
        #{userid,jdbcType=INTEGER},
      </if>
      <if test="showname != null">
        #{showname,jdbcType=VARCHAR},
      </if>
      <if test="username != null">
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="mobile != null">
        #{mobile,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="paypassword != null">
        #{paypassword,jdbcType=VARCHAR},
      </if>
      <if test="idcard != null">
        #{idcard,jdbcType=VARCHAR},
      </if>
      <if test="regtime != null">
        #{regtime,jdbcType=TIMESTAMP},
      </if>
      <if test="ip != null">
        #{ip,jdbcType=VARCHAR},
      </if>
      <if test="sign != null">
        #{sign,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        #{status,jdbcType=INTEGER},
      </if>
      <if test="invitecode != null">
        #{invitecode,jdbcType=VARCHAR},
      </if>
      <if test="invite1 != null">
        #{invite1,jdbcType=VARCHAR},
      </if>
      <if test="invite2 != null">
        #{invite2,jdbcType=VARCHAR},
      </if>
      <if test="invite3 != null">
        #{invite3,jdbcType=VARCHAR},
      </if>
      <if test="creditlevel != null">
        #{creditlevel,jdbcType=INTEGER},
      </if>
      <if test="isdeleted != null">
        #{isdeleted,jdbcType=INTEGER},
      </if>
      <if test="remark != null">
        #{remark,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.hucheng.common.entity.SysUser">
    update sys_user
    <set>
      <if test="showname != null">
        showname = #{showname,jdbcType=VARCHAR},
      </if>
      <if test="username != null">
        username = #{username,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="mobile != null">
        mobile = #{mobile,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="paypassword != null">
        paypassword = #{paypassword,jdbcType=VARCHAR},
      </if>
      <if test="idcard != null">
        idcard = #{idcard,jdbcType=VARCHAR},
      </if>
      <if test="regtime != null">
        regtime = #{regtime,jdbcType=TIMESTAMP},
      </if>
      <if test="ip != null">
        ip = #{ip,jdbcType=VARCHAR},
      </if>
      <if test="sign != null">
        sign = #{sign,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="invitecode != null">
        invitecode = #{invitecode,jdbcType=VARCHAR},
      </if>
      <if test="invite1 != null">
        invite1 = #{invite1,jdbcType=VARCHAR},
      </if>
      <if test="invite2 != null">
        invite2 = #{invite2,jdbcType=VARCHAR},
      </if>
      <if test="invite3 != null">
        invite3 = #{invite3,jdbcType=VARCHAR},
      </if>
      <if test="creditlevel != null">
        creditlevel = #{creditlevel,jdbcType=INTEGER},
      </if>
      <if test="isdeleted != null">
        isdeleted = #{isdeleted,jdbcType=INTEGER},
      </if>
      <if test="remark != null">
        remark = #{remark,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where userid = #{userid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.hucheng.common.entity.SysUser">
    update sys_user
    set showname = #{showname,jdbcType=VARCHAR},
      username = #{username,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR},
      mobile = #{mobile,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      paypassword = #{paypassword,jdbcType=VARCHAR},
      idcard = #{idcard,jdbcType=VARCHAR},
      regtime = #{regtime,jdbcType=TIMESTAMP},
      ip = #{ip,jdbcType=VARCHAR},
      sign = #{sign,jdbcType=VARCHAR},
      status = #{status,jdbcType=INTEGER},
      invitecode = #{invitecode,jdbcType=VARCHAR},
      invite1 = #{invite1,jdbcType=VARCHAR},
      invite2 = #{invite2,jdbcType=VARCHAR},
      invite3 = #{invite3,jdbcType=VARCHAR},
      creditlevel = #{creditlevel,jdbcType=INTEGER},
      isdeleted = #{isdeleted,jdbcType=INTEGER},
      remark = #{remark,jdbcType=LONGVARCHAR}
    where userid = #{userid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.hucheng.common.entity.SysUser">
    update sys_user
    set showname = #{showname,jdbcType=VARCHAR},
      username = #{username,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR},
      mobile = #{mobile,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      paypassword = #{paypassword,jdbcType=VARCHAR},
      idcard = #{idcard,jdbcType=VARCHAR},
      regtime = #{regtime,jdbcType=TIMESTAMP},
      ip = #{ip,jdbcType=VARCHAR},
      sign = #{sign,jdbcType=VARCHAR},
      status = #{status,jdbcType=INTEGER},
      invitecode = #{invitecode,jdbcType=VARCHAR},
      invite1 = #{invite1,jdbcType=VARCHAR},
      invite2 = #{invite2,jdbcType=VARCHAR},
      invite3 = #{invite3,jdbcType=VARCHAR},
      creditlevel = #{creditlevel,jdbcType=INTEGER},
      isdeleted = #{isdeleted,jdbcType=INTEGER}
    where userid = #{userid,jdbcType=INTEGER}
  </update>

  <!--查询单个对象-->
  <select id="findUser" parameterType="SysUser" resultType="SysUser">
    SELECT * FROM sys_user WHERE isdeleted=0
    <if test="username!=null">
      AND username=#{username}
    </if>
    <if test="email!=null">
      AND email=#{email}
    </if>
    <if test="mobile!=null">
      AND mobile=#{mobile}
    </if>
    <if test="password!=null">
      AND password=#{password}
    </if>
  </select>
</mapper>